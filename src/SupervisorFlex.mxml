<?xml version="1.0" encoding="utf-8"?>
<mx:WindowedApplication xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:login="com.common.login.*" 
	xmlns:t="com.common.test.*"
	creationComplete="initApp()"
	layout="absolute" width="1000" height="700">
	<mx:XML id="podsData"  source="data/pods.xml"/>
	<mx:Style source="css/style.css" />
	<mx:Script>
		<![CDATA[
			import MyApp.Model.VO.EMP;
			import MyApp.MyAppFacade;
			
			import com.as3xls.xls.Cell;
			import com.as3xls.xls.ExcelFile;
			import com.as3xls.xls.Sheet;
			import com.common.content.*;
			import com.common.content.exportExcel;
			import com.common.dashboard.component.*;
			import com.common.dashboard.view.ContentDataGrid1;
			import com.common.dashboard.view.Pod;
			import com.common.dashboard.view.PodContentBase;
			import com.common.util.DateUtil;
			
			import flash.events.*;
			
			import mx.binding.utils.ChangeWatcher;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.Application;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.http.HTTPService;
			
			private var popup:newTaskWindow=null;
			public var emp:EMP = null;
			public static var domain:String = "http://127.0.0.1:8080/SupervisorSys";
  		    public function initApp():void
			{
				this.nativeWindow.maximize();
  				var facade:MyAppFacade = MyAppFacade.getInstance();
  				facade.startup( this ); 
  		    }
			
			public function loginDone():void
			{
				if(emp!=null)
				{
//					this.test.addPods(test.manager);
					this.test.getData(emp);
				}
			}
			
			private function onAddTaskClick(e:MouseEvent):void
			{
				popup = newTaskWindow(PopUpManager.createPopUp(DisplayObject(Application.application), newTaskWindow, true));
				popup.addEventListener(CloseEvent.CLOSE, titleWindow_close);
				popup.clearView();
				popup.commitBtn.addEventListener(MouseEvent.CLICK, addNewTask);
				PopUpManager.centerPopUp(popup);
			}
			
			private function onLogoutClick(e:MouseEvent):void
			{
				appStack.selectedChild=loginCanvas;
				login.msg.text = "";
				this.emp = null;
				var len:Number = test.manager.items.length;
				for(var i:int=0;i<len;i++)
				{
					var content:PodContentBase = (test.manager.items[i] as Pod).getChildAt(0) as PodContentBase;
					content.clearData();
				}
			}
			
			private function titleWindow_close(evt:CloseEvent):void
			{
				PopUpManager.removePopUp(evt.currentTarget as newTaskWindow);
			}
			
			private function onExportClick(e:MouseEvent):void
			{
				var content:ContentDataGrid1 = (test.manager.items[0] as Pod).getChildAt(0) as ContentDataGrid1;
				exportExcel.onCreate(content.allDataList);
			}
				
			private function addNewTask(e:MouseEvent):void
			{
				if(popup.txtTaskName.text=="") {
					Alert.show("Task Name can't be null!");
				}
				else if(popup.cbbMDept.selectedIndex==-1) {
					Alert.show("Major Department can't be null!");
				}
				else if(popup.cbbMEMP.selectedIndex==-1) {
					Alert.show("Major Employee can't be null!");
				}
				else if(popup.assisDept.selectedIndex==-1){
					Alert.show("Assistant Department can't be null!");
				}
				else if(popup.sDate.selectedDate>popup.eDate.selectedDate) {
					Alert.show("Please check the Date!");
				}
				else {
					var httpService:HTTPService = new HTTPService();
					httpService.addEventListener(ResultEvent.RESULT, resultLnr);
					httpService.addEventListener(FaultEvent.FAULT, faultLnr);
					httpService.resultFormat = "e4x";
					httpService.url = SupervisorFlex.domain + "/report/addTask.action";
					
					var params:Object = new Object();
					params.t_name = popup.txtTaskName.text;
					params.t_major_dept = popup.cbbMDept.selectedIndex+1;
					params.t_major_emp = popup.cbbMEMP.selectedIndex+1;
					params.t_assis_dept = popup.assisDept.selectedIndex+1;
					params.t_begintime = DateUtil.toString1(popup.sDate.selectedDate);
					params.t_deadline = DateUtil.toString1(popup.eDate.selectedDate);
					params.t_desc = popup.desc.text;
					params.t_complete = 0;
					params.t_state = "1";
					httpService.send(params);
					
					PopUpManager.removePopUp(popup);
				}
			}
			
			private function resultLnr(event:ResultEvent):void
			{
				var externalXML:XML = new XML(event.result);
				if(externalXML!=null)
				{
					if(externalXML.item[0].field1=="1")
					{
						Alert.show("Succeed!");
						PopUpManager.removePopUp(popup);
					}
					else if(externalXML.item[0].field1=="0")
					{
						Alert.show("Failed!");
					}
				}
			}
			
			private function faultLnr(e:FaultEvent):void {
				Alert.show("Error occur...");
			}

			protected function linkbutton1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				SupervisorFlex.domain = domainText.text + ":" + portText.text + "/SupervisorSys";
				appStack.selectedChild = loginCanvas;
			}


			protected function linkbutton2_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				appStack.selectedChild = configCanvas;
			}

		]]>
	</mx:Script>
	 <mx:Sequence id="myEffect">
        <mx:Parallel>
            <mx:Zoom />
            <mx:Fade />
        </mx:Parallel>
        <!--<mx:Rotate />-->
    </mx:Sequence>
	<mx:ViewStack id="appStack" width="100%" height="100%" creationPolicy="all">		
		<mx:Box id="loginCanvas"
				width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
			<login:Login id="login"/>
			<mx:LinkButton label="Config" fontSize="11" color="#ff5522" fontWeight="bold" click="linkbutton2_clickHandler(event)"/>
		</mx:Box>
		<mx:VDividedBox id="content">
			<mx:ApplicationControlBar dock="true" paddingTop="0" paddingBottom="0" width="100%" >
				<mx:Button id="addTask" label="Add Task" buttonMode="true" click="onAddTaskClick(event)"/>
				<mx:Button id="logout" label="Log out" buttonMode="true" click="onLogoutClick(event)"/>
				<mx:Button id="export" label="Export to Excel" buttonMode="true" click="onExportClick(event)"/>
			</mx:ApplicationControlBar>
			<t:test id="test" width="100%" />
		</mx:VDividedBox>
		<mx:Box id="configCanvas"
				width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
			<mx:Panel width="370" height="130" layout="absolute" title="Configuration" fontSize="11">
				<mx:Label x="10" y="10" text="Domain:" fontSize="12" fontWeight="bold"/>
				<mx:Label x="32" y="38" text="Port:" fontSize="12" fontWeight="bold"/>
				<mx:TextInput id="domainText" x="78" y="7" width="251" text="http://127.0.0.1"/>
				<mx:TextInput id="portText" x="78" y="32" width="54" text="8080"/>
				<mx:LinkButton click="linkbutton1_clickHandler(event)" x="134" y="57" label="Confirm" fontSize="12" fontWeight="bold" fontFamily="Courier New"/>
			</mx:Panel>
		</mx:Box>
	</mx:ViewStack>
</mx:WindowedApplication>
