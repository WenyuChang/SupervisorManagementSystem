<?xml version="1.0" encoding="utf-8"?>
<mx:DataGrid
	xmlns:mx="http://www.adobe.com/2006/mxml"
 	width="100%" height="100%">
	
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			
			[Bindable]
			public var fieldWidthArr:ArrayCollection=new ArrayCollection([5, 25, 25, 50, 15]);
			
			protected override function drawRowBackground(s:Sprite, rowIndex:int, y:Number, height:Number, color:uint, dataIndex:int):void  
			{
				if(dataIndex<(dataProvider as ArrayCollection).length)
				{
					var item:Object = (dataProvider as ArrayCollection).getItemAt(dataIndex);
					s.alpha = 1;
					var date:Date = item.t_deadline as Date;
					var now:Date = new Date();
					var num:Number=date.getTime()-now.getTime();
					var diffDays:Number=Math.floor(num/(1000*60*60*24));
					if(diffDays<=7 && diffDays>=0 && item.t_complete<1)
					{
						color=0x0CC066;
					}
					else if(diffDays<0&&item.t_complete<1)
					{
						color=0xCC0066;
					}
				}
				super.drawRowBackground(s,rowIndex,y,height,color,dataIndex);  
			}
		]]>
	</mx:Script>
	
	<mx:columns>
		<mx:DataGridColumn width="{int(fieldWidthArr.getItemAt(0))}" headerText="State" dataField="t_state" textAlign="center" resizable="false"/>
		<mx:DataGridColumn width="{int(fieldWidthArr.getItemAt(1))}" headerText="Name" dataField="t_name" textAlign="center" resizable="false"/>
		<mx:DataGridColumn width="{int(fieldWidthArr.getItemAt(2))}" headerText="Deadline" dataField="t_deadline" textAlign="center" resizable="false"/>
		<mx:DataGridColumn width="{int(fieldWidthArr.getItemAt(3))}" headerText="Completion" resizable="false">
			<mx:itemRenderer>
				<mx:Component>
					<mx:Canvas width="100%" height="100%">
						<mx:Label x="10" text="{(data.t_complete.toFixed(2)*100).toFixed()}%" width="50" click="openEditWindow(data)">
							<mx:Script>
								<![CDATA[
									import com.common.util.DateUtil;
									
									import mx.controls.Alert;
									import mx.core.Application;
									import mx.events.CloseEvent;
									import mx.managers.PopUpManager;
									import mx.rpc.events.FaultEvent;
									import mx.rpc.events.ResultEvent;
									import mx.rpc.http.HTTPService;
									
									private var val:Object;
									private var popup:ChangeComletionWindow;
									
									function openEditWindow(value:Object):void
									{
										val = value;
										popup = ChangeComletionWindow(PopUpManager.createPopUp(DisplayObject(Application.application), ChangeComletionWindow, true));
										popup.addEventListener(CloseEvent.CLOSE, titleWindow_close);
										popup.winData = value;
										popup.commitBtn.addEventListener(MouseEvent.CLICK, changeCompletion);
										PopUpManager.centerPopUp(popup);
									}
									
									private function titleWindow_close(evt:CloseEvent):void
									{
										PopUpManager.removePopUp(evt.currentTarget as ChangeComletionWindow);
									}
									
									private function changeCompletion(e:MouseEvent):void
									{
										var httpService:HTTPService = new HTTPService();
										httpService.addEventListener(ResultEvent.RESULT, resultLnr);
										httpService.addEventListener(FaultEvent.FAULT, faultLnr);
										httpService.resultFormat = "e4x";
										httpService.url = SupervisorFlex.domain + "/report/modifyTask.action";
										
										var params:Object = new Object();
										params.t_id = val["t_id"];
										params.t_name = val["t_name"];
										params.t_major_dept = val["t_major_dept"];
										params.t_major_emp = val["t_major_emp"];
										params.t_assis_dept =  val["t_assis_dept"];
										params.t_begintime = DateUtil.toString1(val["t_begintime"]);
										params.t_deadline = DateUtil.toString1(val["t_deadline"]);
										params.t_desc = val["t_desc"];
										params.t_complete = (popup.completion.value/100).toFixed(2);
										if(popup.completion.value==100)
											params.t_state = "3";
										else if(popup.completion.value>0&&popup.completion.value<100&&val["t_state"]=="R")
											params.t_state = "2";
										else if(popup.completion.value<100&&val["t_state"]=="D")
											params.t_state = "2";
										else 
										{
											switch (val["t_state"])
											{
												case "R":
													params.t_state = "1";
													break;
												case "U":
													params.t_state = "2";
													break;
												case "D":
													params.t_state = "3";
													break;
											}
										}
										httpService.send(params);
									}
									
									private function resultLnr(event:ResultEvent):void
									{
										var externalXML:XML = new XML(event.result);
										if(externalXML!=null)
										{
											if(externalXML.item[0].field1=="1")
											{
												Alert.show("Succeed!");
												PopUpManager.removePopUp(popup);
											}
											else if(externalXML.item[0].field1=="0")
											{
												Alert.show("Failed!");
											}
										}
									}
									
									private function faultLnr(e:FaultEvent):void {
										Alert.show("Error occur...");
									}
								]]>
							</mx:Script>
						</mx:Label>
						<mx:Canvas x="50" y="4" width="{data.t_complete*(this.width-60)}" backgroundColor="{0x0000ff}" height="10"/>
					</mx:Canvas>
				</mx:Component>
			</mx:itemRenderer>
		</mx:DataGridColumn>
		
		<mx:DataGridColumn id="btnColumn" width="{int(fieldWidthArr.getItemAt(4))}" textAlign="center" resizable="false">
			<mx:itemRenderer>
				<mx:Component>
					<mx:HBox>
						<mx:LinkButton id="detailBtn" width="20%" click="onDetailBtnClick(data)" label="Detail" />
						<mx:LinkButton id="changeBtn" width="20%" click="onChangeBtnClick(data)" label="Change" />
						<mx:Script>
							<![CDATA[
								import com.common.dashboard.component.*;
								
								import mx.collections.IList;
								import mx.controls.Alert;
								import mx.core.Application;
								import mx.effects.Blur;
								import mx.events.CloseEvent;
								import mx.events.TweenEvent;
								import mx.managers.PopUpManager;
								
								override public function set data(value:Object):void
								{
									super.data = value;
								}
									
								function onDetailBtnClick(value:Object):void
								{
									var popup:DetailWindow = DetailWindow(PopUpManager.createPopUp(DisplayObject(Application.application), DetailWindow, true));
									popup.winData = value;
									PopUpManager.centerPopUp(popup);
								}
								function onChangeBtnClick(value:Object):void
								{
									var popup:ChangeWindow = ChangeWindow(PopUpManager.createPopUp(DisplayObject(Application.application), ChangeWindow, true));
									popup.winData = value;
									popup.addEventListener(CloseEvent.CLOSE, titleWindow_close);
									PopUpManager.centerPopUp(popup);
								}
								
								private function titleWindow_close(evt:CloseEvent):void
								{
									if((evt.currentTarget as ChangeWindow).alterSuccess)
									{
										
									}
									PopUpManager.removePopUp(evt.currentTarget as ChangeWindow);
								}
							]]>
						</mx:Script>
					</mx:HBox>
				</mx:Component>
			</mx:itemRenderer>
		</mx:DataGridColumn>
			
	</mx:columns>
	
</mx:DataGrid>
